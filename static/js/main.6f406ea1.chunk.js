(this["webpackJsonpclinical-search"]=this["webpackJsonpclinical-search"]||[]).push([[0],{11:function(e){e.exports=JSON.parse('[{"name":"NPI","caption":"National Provider Identifier of the provider."},{"name":"provider_type","caption":"The provider (specialty) type. The provider type is determined based on the provider\'s primary (or first, if primary not indicated) taxonomy code. If the taxonomy code has a corresponding medicare provider type, that type will be used; if not, the taxonomy classification will be used. For other types/specialties of a provider, see the \'licenses\' field below for details."},{"name":"gender","caption":"Gender of the provider."},{"name":"name.full","caption":"The full name string of the provider."},{"name":"addr_practice.full","caption":"The full address string of the practice address."},{"name":"licenses","caption":"A list of license objects for the provider, each with sub-fields such as issuing states, taxonomy, corresponding medicare provider type, etc. For search, use its specific sub-fields."},{"name":"licenses.taxonomy","caption":"The taxonomy object (with sub-fields) for the provider\'s corresponding license. For search, use its specific sub-fields."},{"name":"licenses.taxonomy.code","caption":"The taxonomy code for the provider\'s corresponding license."},{"name":"licenses.taxonomy.grouping","caption":"The taxonomy \'grouping\' for the provider\'s corresponding license."},{"name":"licenses.taxonomy.classification","caption":"The taxonomy \'classification\' for the provider\'s corresponding license."},{"name":"licenses.taxonomy.specialization","caption":"The taxonomy \'specialization\' for the provider\'s corresponding license."},{"name":"licenses.medicare","caption":"The medicare type object (with sub-fields) for the provider\'s corresponding license. For search, use its specific sub-fields."},{"name":"licenses.medicare.spc_code","caption":"The medicare type specialty code for the provider\'s corresponding license."},{"name":"licenses.medicare.type","caption":"The medicare provider type for the provider\'s corresponding license."},{"name":"name","caption":"The name object (with sub-fields) of the provider. For search, use name.full or other specific sub-fields."},{"name":"name.last","caption":"The last name of the provider."},{"name":"name.first","caption":"The first name of the provider."},{"name":"name.middle","caption":"The middle name of the provider."},{"name":"name.credential","caption":"The credential (e.g., MD, RN) of the provider."},{"name":"name.prefix","caption":"The prefix of the provider name."},{"name":"name.suffix","caption":"The suffix of the provider name."},{"name":"addr_practice","caption":"The provider\'s practice address object (with sub-fields). For search, use addr_practice.full or other specific sub-fields."},{"name":"addr_practice.line1","caption":"The line1 (street address) of the provider\'s practice address."},{"name":"addr_practice.line2","caption":"The line2 (e.g., suite#) of the provider\'s practice address."},{"name":"addr_practice.city","caption":"The city of the provider\'s practice address."},{"name":"addr_practice.state","caption":"The state of the provider\'s practice address."},{"name":"addr_practice.zip","caption":"The zip code of the provider\'s practice address."},{"name":"addr_practice.phone","caption":"The phone number for the provider\'s practice address."},{"name":"addr_practice.fax","caption":"The fax number for the provider\'s practice address."},{"name":"addr_practice.country","caption":"The country for the provider\'s practice address."},{"name":"addr_mailing","caption":"The provider\'s mailing address object (with sub-fields). For search, use addr_mailing.full or other specific sub-fields."},{"name":"addr_mailing.full","caption":"The full address string of the mailing address."},{"name":"addr_mailing.line1","caption":"The line1 (street address) of the provider\'s mailing address."},{"name":"addr_mailing.line2","caption":"The line2 (e.g., suite#) of the provider\'s mailing address."},{"name":"addr_mailing.city","caption":"The city of the provider\'s mailing address."},{"name":"addr_mailing.state","caption":"The state of the provider\'s mailing address."},{"name":"addr_mailing.zip","caption":"The zip code of the provider\'s mailing address."},{"name":"addr_mailing.phone","caption":"The phone number for the provider\'s mailing address."},{"name":"addr_mailing.fax","caption":"The fax number for the provider\'s mailing address."},{"name":"addr_mailing.country","caption":"The country for the provider\'s mailing address."},{"name":"name_other","caption":"The provider\'s \'other name\' object (with sub-fields). For search, use name_other.full or other specific sub-fields."},{"name":"name_other.full","caption":"The full name string for the \'other name\' of the provider."},{"name":"name_other.last","caption":"The last name of the provider\'s other name."},{"name":"name_other.first","caption":"The first name of the provider\'s other name."},{"name":"name_other.middle","caption":"The middle name of the provider\'s other name."},{"name":"name_other.credential","caption":"The credential (e.g., MD, RN) of the provider\'s other name."},{"name":"name_other.prefix","caption":"The prefix of the provider\'s other name."},{"name":"name_other.suffix","caption":"The suffix of the provider\'s other name."},{"name":"other_ids","caption":"A list of other ids issued by various agencies/organizations, each with sub-fields. For search, use specific sub-fields."},{"name":"other_ids.id","caption":"The id of the \'other id\'."},{"name":"other_ids.type","caption":"The type of the other id."},{"name":"other_ids.issuer","caption":"The issuer of the other id."},{"name":"other_ids.state","caption":"The state of the other id."},{"name":"misc","caption":"An object with sub-fields for the other, misc data elements."},{"name":"misc.auth_official","caption":"The \'authorized official\' object for the provider, with sub-fields. For search, use specific sub-fields."},{"name":"misc.auth_official.last","caption":"The last name of the provider\'s authorized official."},{"name":"misc.auth_official.first","caption":"The first name of the provider\'s authorized official."},{"name":"misc.auth_official.middle","caption":"The middle name of the provider\'s authorized official."},{"name":"misc.auth_official.credential","caption":"The credential (e.g., MD, RN) of the provider\'s authorized official."},{"name":"misc.auth_official.title","caption":"The title of the provider\'s authorized official."},{"name":"misc.auth_official.prefix","caption":"The prefix of the provider\'s authorized official name."},{"name":"misc.auth_official.suffix","caption":"The suffix of the provider\'s authorized official name."},{"name":"misc.auth_official.phone","caption":"The phone of the provider\'s authorized official."},{"name":"misc.replacement_NPI","caption":"The provider\'s replacement NPI number."},{"name":"misc.EIN","caption":"The provider\'s EIN, rarely populated."},{"name":"misc.enumeration_date","caption":"The enumeration data of the provider."},{"name":"misc.last_update_date","caption":"The provider entry\'s last update date."},{"name":"misc.is_sole_proprietor","caption":"The provider sole proprietor flag."},{"name":"misc.is_org_subpart","caption":"The provider organization subpart flag."},{"name":"misc.parent_LBN","caption":"The provider organization subpart legal business name."},{"name":"misc.parent_TIN","caption":"The provider organization subpart TIN."}]')},16:function(e,i,a){},24:function(e,i,a){},25:function(e,i,a){},32:function(e,i,a){},33:function(e,i,a){},34:function(e,i,a){"use strict";a.r(i);var t=a(0),r=a.n(t),n=a(18),o=a.n(n),c=(a(24),a(7)),s=(a(16),a(25),a(8)),d=a(2),h=a(11),p="https://clinicaltables.nlm.nih.gov/api/npi_idv/v3/search",l={BRIEF_SET:[0,1,2,3,4,39],ALL_FIELDS:[]},f=function(e){var i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:l.BRIEF_SET;return e.map((function(e,a){var t=i===l.BRIEF_SET?h[i[a]]:h[a];return{name:t.name,caption:t.caption,value:e}}))},m=function(e,i){var a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;return new Promise((function(t,r){var n="&df=".concat(h.filter((function(e,a){return 0===i.length||i.includes(a)})).map((function(e){return e.name})).reduce((function(e,i){return e+","+i})));fetch("".concat(p,"?maxList=").concat(a,"&terms=").concat(e).concat(n)).then((function(e){return e.json().then((function(e){var a=e[3];i===l.ALL_FIELDS&&(a=f(a[0],i)),t(a)}))})).catch((function(e){return r(e)}))}))},u=a(1);var v=function(){var e=Object(d.g)(),i=Object(t.useState)(),a=Object(c.a)(i,2),r=a[0],n=a[1];return Object(t.useEffect)((function(){var i=!1;return function(e,i){return m(e,l.BRIEF_SET,i)}(e.text,10).then((function(e){i||n(e)})),function(){i=!0}})),r?Object(u.jsx)("div",{className:"grid",children:Object(u.jsx)("div",{className:"grid-content",children:r.map((function(e,i){var a=Object(c.a)(e,6),t=a[0],r=a[1],n=a[2],o=a[3],d=a[4],h=a[5];return Object(u.jsxs)("div",{className:"grid-gridCard",children:[Object(u.jsx)("div",{children:r}),Object(u.jsxs)("div",{className:"grid-gridCard-primaryColumn",children:[Object(u.jsx)(s.b,{to:"/card/".concat(t),children:o}),Object(u.jsx)("div",{className:"grid-gridCard-primaryColumn-rightText",children:"F"===n?"Female":"Male"})]}),Object(u.jsxs)("div",{children:[h,", ",d]})]},i)}))})}):null};a(32);var b=function(){var e=Object(d.g)(),i=Object(t.useState)(e.text?e.text:""),a=Object(c.a)(i,2),r=a[0],n=a[1],o=Object(d.f)();return Object(u.jsxs)("div",{className:"search",children:[Object(u.jsx)("input",{value:r,onChange:function(e){n(e.target.value)},onKeyDown:function(e){"Enter"===e.key&&o.push("/search/".concat(r))}}),Object(u.jsx)("button",{disabled:!r,onClick:function(){o.push("/search/".concat(r))},children:Object(u.jsx)("img",{src:"/search.png",width:"18",alt:"search icon"})})]})};a(33);var g=function(){var e=Object(d.g)(),i=Object(t.useState)(""),a=Object(c.a)(i,2),r=a[0],n=a[1];return Object(t.useEffect)((function(){var i,a,t=!1;return(i=e.npi,m(i,l.ALL_FIELDS,a)).then((function(e){t||n(e.filter((function(e){return"{"!==e.value[0]&&!!e.value})))})),function(){t=!0}})),r?Object(u.jsx)("div",{className:"card",children:Object(u.jsx)("div",{className:"card-content",children:r.map((function(e,i){return Object(u.jsxs)("div",{className:"card-Card",children:[Object(u.jsx)("div",{className:"card-Card-fieldCaption",children:e.caption}),e.value]},i)}))})}):Object(u.jsx)("div",{className:"card",children:"loading..."})};var j=function(){var e=Object(t.useState)([]),i=Object(c.a)(e,2),a=i[0],r=i[1],n=function(e){return Object(u.jsxs)(u.Fragment,{children:[Object(u.jsx)(b,{onLoad:function(e){r(e)}}),Object(u.jsx)(v,{data:a})]})};return Object(u.jsx)(s.a,{children:Object(u.jsx)("div",{className:"App",children:Object(u.jsxs)(d.c,{children:[Object(u.jsx)(d.a,{path:"/card/:npi",children:Object(u.jsx)(g,{})}),Object(u.jsx)(d.a,{path:"/search/:text",children:n()}),Object(u.jsx)(d.a,{path:"/",children:n()})]})})})},T=function(e){e&&e instanceof Function&&a.e(3).then(a.bind(null,35)).then((function(i){var a=i.getCLS,t=i.getFID,r=i.getFCP,n=i.getLCP,o=i.getTTFB;a(e),t(e),r(e),n(e),o(e)}))};o.a.render(Object(u.jsx)(r.a.StrictMode,{children:Object(u.jsx)(j,{})}),document.getElementById("root")),T()}},[[34,1,2]]]);
//# sourceMappingURL=main.6f406ea1.chunk.js.map