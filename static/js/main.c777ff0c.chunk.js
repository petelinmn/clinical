(this["webpackJsonpclinical-search"]=this["webpackJsonpclinical-search"]||[]).push([[0],{14:function(e){e.exports=JSON.parse('[{"name":"NPI","caption":"National Provider Identifier of the provider."},{"name":"provider_type","caption":"The provider (specialty) type. The provider type is determined based on the provider\'s primary (or first, if primary not indicated) taxonomy code. If the taxonomy code has a corresponding medicare provider type, that type will be used; if not, the taxonomy classification will be used. For other types/specialties of a provider, see the \'licenses\' field below for details."},{"name":"gender","caption":"Gender of the provider."},{"name":"name.full","caption":"The full name string of the provider."},{"name":"addr_practice.full","caption":"The full address string of the practice address."},{"name":"licenses","caption":"A list of license objects for the provider, each with sub-fields such as issuing states, taxonomy, corresponding medicare provider type, etc. For search, use its specific sub-fields."},{"name":"licenses.taxonomy","caption":"The taxonomy object (with sub-fields) for the provider\'s corresponding license. For search, use its specific sub-fields."},{"name":"licenses.taxonomy.code","caption":"The taxonomy code for the provider\'s corresponding license."},{"name":"licenses.taxonomy.grouping","caption":"The taxonomy \'grouping\' for the provider\'s corresponding license."},{"name":"licenses.taxonomy.classification","caption":"The taxonomy \'classification\' for the provider\'s corresponding license."},{"name":"licenses.taxonomy.specialization","caption":"The taxonomy \'specialization\' for the provider\'s corresponding license."},{"name":"licenses.medicare","caption":"The medicare type object (with sub-fields) for the provider\'s corresponding license. For search, use its specific sub-fields."},{"name":"licenses.medicare.spc_code","caption":"The medicare type specialty code for the provider\'s corresponding license."},{"name":"licenses.medicare.type","caption":"The medicare provider type for the provider\'s corresponding license."},{"name":"name","caption":"The name object (with sub-fields) of the provider. For search, use name.full or other specific sub-fields."},{"name":"name.last","caption":"The last name of the provider."},{"name":"name.first","caption":"The first name of the provider."},{"name":"name.middle","caption":"The middle name of the provider."},{"name":"name.credential","caption":"The credential (e.g., MD, RN) of the provider."},{"name":"name.prefix","caption":"The prefix of the provider name."},{"name":"name.suffix","caption":"The suffix of the provider name."},{"name":"addr_practice","caption":"The provider\'s practice address object (with sub-fields). For search, use addr_practice.full or other specific sub-fields."},{"name":"addr_practice.line1","caption":"The line1 (street address) of the provider\'s practice address."},{"name":"addr_practice.line2","caption":"The line2 (e.g., suite#) of the provider\'s practice address."},{"name":"addr_practice.city","caption":"The city of the provider\'s practice address."},{"name":"addr_practice.state","caption":"The state of the provider\'s practice address."},{"name":"addr_practice.zip","caption":"The zip code of the provider\'s practice address."},{"name":"addr_practice.phone","caption":"The phone number for the provider\'s practice address."},{"name":"addr_practice.fax","caption":"The fax number for the provider\'s practice address."},{"name":"addr_practice.country","caption":"The country for the provider\'s practice address."},{"name":"addr_mailing","caption":"The provider\'s mailing address object (with sub-fields). For search, use addr_mailing.full or other specific sub-fields."},{"name":"addr_mailing.full","caption":"The full address string of the mailing address."},{"name":"addr_mailing.line1","caption":"The line1 (street address) of the provider\'s mailing address."},{"name":"addr_mailing.line2","caption":"The line2 (e.g., suite#) of the provider\'s mailing address."},{"name":"addr_mailing.city","caption":"The city of the provider\'s mailing address."},{"name":"addr_mailing.state","caption":"The state of the provider\'s mailing address."},{"name":"addr_mailing.zip","caption":"The zip code of the provider\'s mailing address."},{"name":"addr_mailing.phone","caption":"The phone number for the provider\'s mailing address."},{"name":"addr_mailing.fax","caption":"The fax number for the provider\'s mailing address."},{"name":"addr_mailing.country","caption":"The country for the provider\'s mailing address."},{"name":"name_other","caption":"The provider\'s \'other name\' object (with sub-fields). For search, use name_other.full or other specific sub-fields."},{"name":"name_other.full","caption":"The full name string for the \'other name\' of the provider."},{"name":"name_other.last","caption":"The last name of the provider\'s other name."},{"name":"name_other.first","caption":"The first name of the provider\'s other name."},{"name":"name_other.middle","caption":"The middle name of the provider\'s other name."},{"name":"name_other.credential","caption":"The credential (e.g., MD, RN) of the provider\'s other name."},{"name":"name_other.prefix","caption":"The prefix of the provider\'s other name."},{"name":"name_other.suffix","caption":"The suffix of the provider\'s other name."},{"name":"other_ids","caption":"A list of other ids issued by various agencies/organizations, each with sub-fields. For search, use specific sub-fields."},{"name":"other_ids.id","caption":"The id of the \'other id\'."},{"name":"other_ids.type","caption":"The type of the other id."},{"name":"other_ids.issuer","caption":"The issuer of the other id."},{"name":"other_ids.state","caption":"The state of the other id."},{"name":"misc","caption":"An object with sub-fields for the other, misc data elements."},{"name":"misc.auth_official","caption":"The \'authorized official\' object for the provider, with sub-fields. For search, use specific sub-fields."},{"name":"misc.auth_official.last","caption":"The last name of the provider\'s authorized official."},{"name":"misc.auth_official.first","caption":"The first name of the provider\'s authorized official."},{"name":"misc.auth_official.middle","caption":"The middle name of the provider\'s authorized official."},{"name":"misc.auth_official.credential","caption":"The credential (e.g., MD, RN) of the provider\'s authorized official."},{"name":"misc.auth_official.title","caption":"The title of the provider\'s authorized official."},{"name":"misc.auth_official.prefix","caption":"The prefix of the provider\'s authorized official name."},{"name":"misc.auth_official.suffix","caption":"The suffix of the provider\'s authorized official name."},{"name":"misc.auth_official.phone","caption":"The phone of the provider\'s authorized official."},{"name":"misc.replacement_NPI","caption":"The provider\'s replacement NPI number."},{"name":"misc.EIN","caption":"The provider\'s EIN, rarely populated."},{"name":"misc.enumeration_date","caption":"The enumeration data of the provider."},{"name":"misc.last_update_date","caption":"The provider entry\'s last update date."},{"name":"misc.is_sole_proprietor","caption":"The provider sole proprietor flag."},{"name":"misc.is_org_subpart","caption":"The provider organization subpart flag."},{"name":"misc.parent_LBN","caption":"The provider organization subpart legal business name."},{"name":"misc.parent_TIN","caption":"The provider organization subpart TIN."}]')},19:function(e,i,t){},27:function(e,i,t){},28:function(e,i,t){},36:function(e,i,t){},37:function(e,i,t){},38:function(e,i,t){"use strict";t.r(i);var r,a=t(0),n=t.n(a),c=t(21),o=t.n(c),s=(t(27),t(19),t(7)),d=(t(28),t(2)),p=t(10),h=t(9),l=t.n(h),f=t(13),m=t(14),u=[0,1,2,3,4,39];!function(e){e[e.breif=0]="breif",e[e.full=1]="full"}(r||(r={}));var v=function(e){var i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:r.breif;return e.map((function(e){return e.map((function(e,t){var a=i===r.breif?m[u[t]]:m[t];return{name:a.name,caption:a.caption,value:e}}))}))},b=function(){var e=Object(f.a)(l.a.mark((function e(i){var t,a,n;return l.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return t="&df=".concat(m.filter((function(e,t){return i.fetchType===r.full||u.includes(t)})).map((function(e){return e.name})).reduce((function(e,i){return e+","+i}))),e.next=3,fetch("".concat("https://clinicaltables.nlm.nih.gov/api/npi_idv/v3/search","?maxList=").concat(i.maxList,"&terms=").concat(i.searchString).concat(t));case 3:return a=e.sent,e.next=6,a.json();case 6:return n=e.sent,e.abrupt("return",n[3]);case 8:case"end":return e.stop()}}),e)})));return function(i){return e.apply(this,arguments)}}(),j=function(){var e=Object(f.a)(l.a.mark((function e(i){var t;return l.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,b({searchString:i,fetchType:r.full,maxList:1});case 2:return t=e.sent,e.abrupt("return",v(t,r.full)[0]);case 4:case"end":return e.stop()}}),e)})));return function(i){return e.apply(this,arguments)}}(),x=function(){var e=Object(f.a)(l.a.mark((function e(i,t){var a;return l.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,b({searchString:i,fetchType:r.breif,maxList:t});case 2:return a=e.sent,e.abrupt("return",v(a,r.breif));case 4:case"end":return e.stop()}}),e)})));return function(i,t){return e.apply(this,arguments)}}(),g=t(1);var T=function(){var e=Object(d.g)(),i=Object(a.useState)([]),t=Object(s.a)(i,2),r=t[0],n=t[1];return Object(a.useEffect)((function(){var i=!1;return x(e.text,10).then((function(e){i||n(e)})),function(){i=!0}}),[e.text]),Object(g.jsx)("div",{className:"grid",children:Object(g.jsx)("div",{className:"grid-content",children:null===r||void 0===r?void 0:r.map((function(e,i){var t=e.map((function(e){return e.value})),r=Object(s.a)(t,6),a=r[0],n=r[1],c=r[2],o=r[3],d=r[4],h=r[5];return Object(g.jsxs)("div",{className:"grid-gridCard",children:[Object(g.jsx)("div",{children:n}),Object(g.jsxs)("div",{className:"grid-gridCard-primaryColumn",children:[Object(g.jsx)(p.b,{to:"/card/".concat(a),children:o}),Object(g.jsx)("div",{className:"grid-gridCard-primaryColumn-rightText",children:"F"===c?"Female":"Male"})]}),Object(g.jsxs)("div",{children:[h,", ",d]})]},i)}))})})},O=t(12),_=(t(36),function(){return Object(g.jsx)("svg",{width:"18",height:"18",viewBox:"0 0 18 18",fill:"none",children:Object(g.jsx)("path",{d:"M12.5 11H11.71L11.43 10.73C12.4439 9.55402 13.0011 8.0527 13 6.5C13 5.21442 12.6188 3.95772 11.9046 2.8888C11.1903 1.81988 10.1752 0.986756 8.98744 0.494786C7.79973 0.00281635 6.49279 -0.125905 5.23192 0.124899C3.97104 0.375703 2.81285 0.994767 1.90381 1.90381C0.994767 2.81285 0.375703 3.97104 0.124899 5.23192C-0.125905 6.49279 0.00281635 7.79973 0.494786 8.98744C0.986756 10.1752 1.81988 11.1903 2.8888 11.9046C3.95772 12.6188 5.21442 13 6.5 13C8.11 13 9.59 12.41 10.73 11.43L11 11.71V12.5L16 17.49L17.49 16L12.5 11ZM6.5 11C4.01 11 2 8.99 2 6.5C2 4.01 4.01 2 6.5 2C8.99 2 11 4.01 11 6.5C11 8.99 8.99 11 6.5 11Z",fill:"#1B3548"})})}),y=function(){return Object(g.jsx)("svg",{width:"14",height:"14",viewBox:"0 0 24 24",fill:"none",className:"erase-icon",children:Object(g.jsx)("path",{d:"M20 6.91L17.09 4L12 9.09L6.91 4L4 6.91L9.09 12L4 17.09L6.91 20L12 14.91L17.09 20L20 17.09L14.91 12L20 6.91Z",fill:"#1B3548"})})};var N=function(){var e,i=Object(d.g)(),t=Object(a.useState)({searchString:null!==(e=i.text)&&void 0!==e?e:"",oldParamText:i.text}),r=Object(s.a)(t,2),n=r[0],c=r[1];Object(a.useEffect)((function(){var e,t;i.text!==n.oldParamText&&c({searchString:null!==(e=i.text)&&void 0!==e?e:"",oldParamText:null!==(t=i.text)&&void 0!==t?t:""})}),[i.text,n.oldParamText]);var o=Object(d.f)(),p=function(){return o.push("/search/".concat(n.searchString))},h=function(){return Object(g.jsxs)("div",{className:"search",children:[Object(g.jsx)("button",{disabled:!n.searchString,onClick:p,children:Object(g.jsx)(_,{})}),Object(g.jsx)("input",{value:n.searchString,onChange:function(e){return c(Object(O.a)(Object(O.a)({},n),{},{searchString:e.target.value}))},onKeyDown:function(e){return"Enter"===e.key&&p()}}),Object(g.jsx)("button",{disabled:!n.searchString,onClick:function(){return c(Object(O.a)(Object(O.a)({},n),{},{searchString:""}))},children:!!n.searchString&&Object(g.jsx)(y,{})})]})};return(null===i||void 0===i?void 0:i.text)?h():Object(g.jsx)("div",{className:"init-search",children:h()})};t(37);var w=function(){var e,i=Object(d.g)(),t=Object(a.useState)(),r=Object(s.a)(t,2),n=r[0],c=r[1];return Object(a.useEffect)((function(){var e=!1;return j(i.npi).then((function(i){e||c(i.filter((function(e){return"{"!==e.value[0]})))})),function(){e=!0}}),[i.npi]),n?Object(g.jsx)("div",{className:"card",children:Object(g.jsx)("div",{className:"card-content",children:null!==(e=null===n||void 0===n?void 0:n.map((function(e,i){return Object(g.jsxs)("div",{className:"card-Card",children:[Object(g.jsx)("div",{className:"card-Card-fieldCaption",children:e.caption}),e.value?e.value:"N/A"]},i)})))&&void 0!==e?e:"no data"})}):Object(g.jsx)("div",{className:"card",children:"loading..."})},C=function(){return Object(g.jsx)(p.a,{children:Object(g.jsx)("div",{className:"App",children:Object(g.jsxs)(d.c,{children:[Object(g.jsx)(d.a,{path:"/card/:npi",children:Object(g.jsx)(w,{})}),Object(g.jsx)(d.a,{path:"/search/:text",children:Object(g.jsxs)(g.Fragment,{children:[Object(g.jsx)(N,{}),Object(g.jsx)(T,{})]})}),Object(g.jsx)(d.a,{path:"/",children:Object(g.jsx)(N,{})})]})})})};o.a.render(Object(g.jsx)(n.a.StrictMode,{children:Object(g.jsx)(C,{})}),document.getElementById("root"))}},[[38,1,2]]]);
//# sourceMappingURL=main.c777ff0c.chunk.js.map