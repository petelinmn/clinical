{"version":3,"sources":["dataFetchService.ts","components/Grid.tsx","components/Search.tsx","components/Card.tsx","App.tsx","index.js"],"names":["FetchType","BRIEF_DATA_FIELDS","mapDataToFields","data","fetchType","breif","map","dataItem","item","index","field","fields","name","caption","value","fetchData","request","a","df","filter","_","full","includes","reduce","acc","curItem","fetch","maxList","searchString","response","json","result","fetchCardData","fetchListData","Grid","params","useParams","useState","setData","useEffect","isCancelled","text","then","className","length","i","npi","providerType","gender","addrPractice","country","to","SearchIcon","width","height","viewBox","fill","d","EraseIcon","Search","oldParamText","state","setState","history","useHistory","doSearch","push","renderSearch","disabled","onClick","onChange","e","target","onKeyDown","key","Card","App","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.48230aa3.chunk.js","sourcesContent":["import fields from './fields.json'\nimport { IDataItem } from './Types'\n\nconst baseUrl: string = 'https://clinicaltables.nlm.nih.gov/api/npi_idv/v3/search';\nconst BRIEF_DATA_FIELDS: number[] = [0,1,2,3,4,39];\n\nenum FetchType {\n  breif,\n  full\n}\n\ninterface RequestInfo {\n  searchString: string,\n  fetchType: FetchType,\n  maxList: number\n}\n\nconst mapDataToFields = (data: any[], fetchType: FetchType = FetchType.breif): IDataItem[][] =>\n  data.map((dataItem) =>\n    dataItem.map((item: any, index: number) => {\n      const field = fetchType === FetchType.breif\n        ? fields[BRIEF_DATA_FIELDS[index]]\n        : fields[index];\n\n      return {\n        name: field.name,\n        caption: field.caption,\n        value: item\n      };\n  }));\n\nconst fetchData = async (\n  request: RequestInfo\n): Promise<any> => {\n  const df: string = `&df=${fields\n    .filter((_, index) => request.fetchType === FetchType.full || BRIEF_DATA_FIELDS.includes(index))\n    .map(item => item.name)\n    .reduce((acc, curItem) => acc + ',' + curItem)}`;\n\n  const response = await fetch(`${baseUrl}?maxList=${request.maxList}&terms=${request.searchString}${df}`);\n  const result = await response.json();\n  return result[3];\n}\n\nconst fetchCardData = async (searchString: string): Promise<IDataItem[]> => {\n  const data = await fetchData({ searchString, fetchType: FetchType.full, maxList: 1 });\n  return mapDataToFields(data, FetchType.full)[0];\n}\n\nconst fetchListData = async (searchString: string, maxList: number): Promise<IDataItem[][]> => {\n  const data = await fetchData({ searchString, fetchType: FetchType.breif, maxList });\n  return mapDataToFields(data, FetchType.breif);\n}\n\nexport {\n  fetchCardData,\n  fetchListData\n};\n","import './Grid.css';\nimport { Link, useParams } from \"react-router-dom\";\nimport { useState, useEffect } from 'react';\nimport { fetchListData } from '../dataFetchService';\nimport { IDataItem } from '../Types'\n\ninterface IGridParams {\n  text: string\n}\n\nfunction Grid() {\n  const params = useParams<IGridParams>();\n  const [data, setData] = useState<IDataItem[][]>([]);\n  useEffect(() => {\n    const maxList: number = 10;\n    let isCancelled: boolean = false;\n    fetchListData(params.text, maxList).then(result => {\n      if (!isCancelled) {\n        setData(result);\n      }\n    });\n\n    return () => {\n      isCancelled = true;\n    };\n  }, [params.text]);\n\n  return (\n    <div className=\"grid\">\n      <div className=\"grid-content\">\n        {!data || !data.length ? 'nothing found' : data?.map((item, i) => {\n          const [npi, providerType, gender, name, addrPractice, country] = item.map((i: { value: string; }) => i.value);\n          return (\n            <div key={i} className=\"grid-gridCard\">\n              <div>{providerType}</div>\n              <div className=\"grid-gridCard-primaryColumn\">\n                <Link to={`/card/${npi}`}>{name}</Link>\n                <div className=\"grid-gridCard-primaryColumn-rightText\">{gender === 'F' ? 'Female' : 'Male'}</div>\n              </div>\n              <div>{country}, {addrPractice}</div>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default Grid;\n","import '../App.css';\r\nimport { useState, useEffect } from 'react';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\nimport './Search.css'\r\n\r\nconst SearchIcon = () => (\r\n  <svg width=\"18\" height=\"18\" viewBox=\"0 0 18 18\" fill=\"none\">\r\n    <path\r\n      d=\"M12.5 11H11.71L11.43 10.73C12.4439 9.55402 13.0011 8.0527 13 6.5C13 5.21442 12.6188 3.95772 11.9046 2.8888C11.1903 1.81988 10.1752 0.986756 8.98744 0.494786C7.79973 0.00281635 6.49279 -0.125905 5.23192 0.124899C3.97104 0.375703 2.81285 0.994767 1.90381 1.90381C0.994767 2.81285 0.375703 3.97104 0.124899 5.23192C-0.125905 6.49279 0.00281635 7.79973 0.494786 8.98744C0.986756 10.1752 1.81988 11.1903 2.8888 11.9046C3.95772 12.6188 5.21442 13 6.5 13C8.11 13 9.59 12.41 10.73 11.43L11 11.71V12.5L16 17.49L17.49 16L12.5 11ZM6.5 11C4.01 11 2 8.99 2 6.5C2 4.01 4.01 2 6.5 2C8.99 2 11 4.01 11 6.5C11 8.99 8.99 11 6.5 11Z\"\r\n      fill=\"#1B3548\"\r\n    />\r\n  </svg>\r\n);\r\n\r\n\r\nconst EraseIcon = () => (\r\n  <svg width=\"14\" height=\"14\" viewBox=\"0 0 24 24\" fill=\"none\" className=\"erase-icon\">\r\n    <path\r\n      d=\"M20 6.91L17.09 4L12 9.09L6.91 4L4 6.91L9.09 12L4 17.09L6.91 20L12 14.91L17.09 20L20 17.09L14.91 12L20 6.91Z\"\r\n      fill={\"#1B3548\"}\r\n    />\r\n  </svg>\r\n);\r\n\r\ninterface ISearchParams {\r\n  text: string\r\n}\r\n\r\ninterface ISearchState {\r\n  searchString: string,\r\n  oldParamText: string\r\n}\r\n\r\nfunction Search() {\r\n  const params = useParams<ISearchParams>();\r\n  const [state, setState] = useState<ISearchState>({\r\n    searchString: params.text ?? '',\r\n    oldParamText: params.text\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (params.text !== state.oldParamText) {\r\n      setState({ \r\n        searchString: params.text ?? '', \r\n        oldParamText: params.text ?? ''\r\n      });\r\n    }\r\n  }, [params.text, state.oldParamText]);\r\n\r\n  const history = useHistory();\r\n  const doSearch = () => history.push(`/search/${state.searchString}`);\r\n\r\n  const renderSearch = (): JSX.Element => (\r\n    <div className=\"search\">\r\n      <button disabled={!state.searchString} onClick={doSearch}>\r\n        <SearchIcon/>\r\n      </button>\r\n      <input value={state.searchString} \r\n        onChange={(e: React.ChangeEvent<HTMLInputElement>) => setState({ ...state, searchString: e.target.value })} \r\n        onKeyDown={(e: React.KeyboardEvent) => (e.key === 'Enter') && doSearch()} \r\n      />\r\n      <button disabled={!state.searchString} onClick={() => setState({ ...state, searchString: '' })}>\r\n        {!!state.searchString && <EraseIcon />}\r\n      </button>\r\n    </div>\r\n  );\r\n\r\n  return params?.text\r\n    ? renderSearch()\r\n    : (\r\n      <div className=\"init-search\">\r\n        {renderSearch()}\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Search;\r\n","import './Card.css';\r\nimport { useParams } from 'react-router-dom';\r\nimport { fetchCardData } from '../dataFetchService';\r\nimport { useState, useEffect } from 'react';\r\n\r\ninterface ICardParams {\r\n  npi: string\r\n}\r\n\r\nfunction Card() {\r\n  const params = useParams<ICardParams>();\r\n  const [data, setData] = useState<any[]>();\r\n  useEffect(() => {\r\n    let isCancelled = false;\r\n    fetchCardData(params.npi).then(result => {\r\n      if (!isCancelled) {\r\n        setData(result.filter(item => item.value[0] !== '{'));\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      isCancelled = true;\r\n    };\r\n  }, [params.npi]);\r\n\r\n  if (!data) {\r\n    return (\r\n      <div className=\"card\">\r\n        loading...\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"card-content\">\r\n        {data?.map((item, index) => {\r\n          return (\r\n            <div className={\"card-Card\"} key={index}>\r\n              <div className={\"card-Card-fieldCaption\"}>{item.caption}</div>\r\n              {item.value ? item.value : 'N/A'}\r\n            </div>\r\n          );\r\n        }) ?? 'no data'}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","\nimport './App.css';\nimport Grid from './components/Grid';\nimport Search from './components/Search'\nimport Card from './components/Card'\nimport {\n  HashRouter  as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\nconst App = () => (\n  <Router>\n    <div className=\"App\">\n      <Switch>\n        <Route path=\"/card/:npi\">\n          <Card />\n        </Route>\n        <Route path={\"/search/:text\"}>\n          <>\n            <Search />\n            <Grid />\n          </>\n        </Route>\n        <Route path={\"/\"}>\n          <Search />\n        </Route>\n      </Switch>\n    </div>\n  </Router>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}